<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd">
    <context:component-scan base-package="com.zwq">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:jdbc.properties"></property>
    </bean>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 同一时间连接池最大数量 0 则无限制 -->
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 池里不会被释放的最多空闲连接数 0 则无限制 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 在不创建新连接的情况下， 池中保持空闲的最小连接数 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property>
    </bean>

    <!-- DAO 接口所在包名， Spring 会自动查找其下的类,,这里通过配置文件的方式 -->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 添加 mybatis 的配置文件， 如果没有可以不添加 -->
        <property name="configLocation" value="classpath:mybatis.cfg.xml"></property>

        <!-- 扫描entity包，使用别名 -->
        <!--<property name="typeAliasesPackage" value="org.seckill.entity"></property>-->
        <!-- 扫描sql配置文件：mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mapping/*.xml"></property>

    </bean>

    <bean class="org.mybatis.spring.SqlSessionTemplate"
          c:sqlSessionFactory-ref="sqlSessionFactory">
    </bean>

    <!-- 4:配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactroy -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!-- 给出扫描Dao接口包 -->
        <property name="basePackage" value="com.zwq.dao" />
    </bean>

    <bean id="clientHttpRequestFactory" class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
        <property name="connectTimeout" value="3000"/>
        <property name="readTimeout" value="3000"/>
    </bean>
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <constructor-arg ref="clientHttpRequestFactory"/>
    </bean>

</beans>